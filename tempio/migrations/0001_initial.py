# Generated by Django 2.1.2 on 2018-10-17 21:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import tempio.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="File",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(default=tempio.models.random_key, unique=True)),
                ("name", models.CharField(blank=True, max_length=200)),
                ("content_type", models.CharField(max_length=250)),
                ("content", models.BinaryField()),
                ("thumbnail", models.BinaryField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("date_created", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("date_expires", models.DateTimeField(blank=True, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("public", models.BooleanField(default=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="files", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField()),
            ],
        ),
        migrations.AddField(
            model_name="file",
            name="tags",
            field=models.ManyToManyField(blank=True, related_name="files", to="tempio.Tag"),
        ),
    ]
